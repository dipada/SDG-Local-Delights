# Deployments
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: authenticationservice
  name: authenticationservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: authenticationservice
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.network/sdg-local-delights-authenticationservice: "true"
        io.kompose.service: authenticationservice
    spec:
      containers:
        - env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: dipada/authenticationservice
          name: authenticationservice
          ports:
            - containerPort: 8080
              hostPort: 30080
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: discovery-server
  name: discovery-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: discovery-server
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.service: discovery-server
    spec:
      containers:
        - image: dipada/discoveryserver
          name: discoveryserver
          ports:
            - containerPort: 8761
              hostPort: 8761
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: frontend
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-default: "true"
        io.kompose.service: frontend
    spec:
      containers:
        - image: dipada/frontend
          name: frontend
          ports:
            - containerPort: 5173
              hostPort: 30073
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: gateway
  name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: gateway
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.service: gateway
    spec:
      containers:
        - env:
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
          image: dipada/apigateway
          name: apigateway
          ports:
            - containerPort: 8085
              hostPort: 30085
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: orderservice
  name: orderservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: orderservice
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.network/sdg-local-delights-order-net: "true"
        io.kompose.service: orderservice
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: admin
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-order:5436/sdgorders
            - name: SPRING_DATASOURCE_USERNAME
              value: admin
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: dipada/orderservice
          name: orderservice
          ports:
            - containerPort: 8086
              hostPort: 8086
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: paymentservice
  name: paymentservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: paymentservice
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.network/sdg-local-delights-paymentservice-net: "true"
        io.kompose.service: paymentservice
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: admin
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-payment:5435/sdgpayments
            - name: SPRING_DATASOURCE_USERNAME
              value: admin
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: dipada/paymentservice
          name: paymentservice
          ports:
            - containerPort: 8084
              hostPort: 8084
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: pgadmin
  name: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pgadmin
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-productservice: "true"
        io.kompose.network/sdg-local-delights-shopservice: "true"
        io.kompose.network/sdg-local-delights-userservice: "true"
        io.kompose.service: pgadmin
    spec:
      containers:
        - env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: admin@admin.com
            - name: PGADMIN_DEFAULT_PASSWORD
              value: root
            - name: PGADMIN_LISTEN_PORT
              value: "50"
          image: dpage/pgadmin4
          name: pgadmin4-container
          ports:
            - containerPort: 50
              hostPort: 5050
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/pgadmin
              name: pgadmin-data
      restartPolicy: Always
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pgadmin-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-userservice: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: sdglocaldelights
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
          image: postgres:latest
          name: postgres-container-userservice
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
      hostname: localhost
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: postgres-order
  name: postgres-order
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-order
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-order-net: "true"
        io.kompose.service: postgres-order
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: sdgorders
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
          image: postgres:latest
          name: postgres-container-orderservice
          ports:
            - containerPort: 5432
              hostPort: 5436
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: orders-db-data
      hostname: localhost
      restartPolicy: Always
      volumes:
        - name: orders-db-data
          persistentVolumeClaim:
            claimName: orders-db-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: postgres-payment
  name: postgres-payment
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-payment
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-paymentservice-net: "true"
        io.kompose.service: postgres-payment
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: sdgpayments
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
          image: postgres:latest
          name: paymentservice-container
          ports:
            - containerPort: 5432
              hostPort: 5435
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: payment-db-data
      hostname: localhost
      restartPolicy: Always
      volumes:
        - name: payment-db-data
          persistentVolumeClaim:
            claimName: payment-db-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: postgres-product
  name: postgres-product
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-product
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-productservice: "true"
        io.kompose.service: postgres-product
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: sdgproducts
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
          image: postgres:latest
          name: postgres-container-product
          ports:
            - containerPort: 5432
              hostPort: 5439
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: product-db-data
      hostname: localhost
      restartPolicy: Always
      volumes:
        - name: product-db-data
          persistentVolumeClaim:
            claimName: product-db-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: postgres-shop
  name: postgres-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-shop
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-shopservice: "true"
        io.kompose.service: postgres-shop
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: sdgshops
            - name: POSTGRES_PASSWORD
              value: admin
            - name: POSTGRES_USER
              value: admin
          image: postgres:latest
          name: postgres-container-shopservice
          ports:
            - containerPort: 5432
              hostPort: 5433
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: shop-db-data
      hostname: localhost
      restartPolicy: Always
      volumes:
        - name: shop-db-data
          persistentVolumeClaim:
            claimName: shop-db-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: productservice
  name: productservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: productservice
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.network/sdg-local-delights-productservice: "true"
        io.kompose.service: productservice
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: admin
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-product:5439/sdgproducts
            - name: SPRING_DATASOURCE_USERNAME
              value: admin
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: dipada/productservice
          name: productservice
          ports:
            - containerPort: 8083
              hostPort: 8083
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
        - image: rabbitmq:3-management
          name: rabbitmq
          ports:
            - containerPort: 15672
              hostPort: 15672
              protocol: TCP
            - containerPort: 5672
              hostPort: 5672
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: data-rabbitmq
      restartPolicy: Always
      volumes:
        - name: data-rabbitmq
          persistentVolumeClaim:
            claimName: data-rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: shopservice
  name: shopservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: shopservice
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.network/sdg-local-delights-shopservice: "true"
        io.kompose.service: shopservice
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: admin
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres-shop:5433/sdgshops
            - name: SPRING_DATASOURCE_USERNAME
              value: admin
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: dipada/shopservice
          name: shopservice
          ports:
            - containerPort: 8082
              hostPort: 8082
              protocol: TCP
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: userservice
  name: userservice
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: userservice
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/sdg-local-delights-apigateway-net: "true"
        io.kompose.network/sdg-local-delights-userservice: "true"
        io.kompose.service: userservice
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_PASSWORD
              value: admin
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres:5432/sdglocaldelights
            - name: SPRING_DATASOURCE_USERNAME
              value: admin
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: eureka.client.serviceUrl.defaultZone
              value: http://discovery-server:8761/eureka/
            - name: spring.profiles.active
              value: docker
            - name: spring.rabbitmq.host
              value: rabbitmq
            - name: spring.rabbitmq.port
              value: "5672"
          image: dipada/userservice
          name: userservice
          ports:
            - containerPort: 8081
              hostPort: 8081
              protocol: TCP
      restartPolicy: Always
